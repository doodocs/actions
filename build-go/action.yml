inputs:
  # Checkout
  CHECKOUT_SUBMODULES:
    required: false
    default: false
  CHECKOUT_TOKEN:
    required: false

  # Login
  DOCKER_LOGIN_URL:
    required: true
  DOCKER_LOGIN:
    required: true
  DOCKER_PASSWORD:
    required: true

  # Go caching
  GO_CACHE_KEY:
    required: true

  # Build
  DOCKER_CONTEXT:
    required: false
    default: "."
  DOCKER_FILE:
    required: false
    default: "Dockerfile"
  DOCKER_IMAGE:
    required: true
  
  # Configurations
  CACHE_FROM:
    required: false
  CACHE_TO:
    required: false
  BUILD_ARGS:
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 1
        submodules: ${{ inputs.CHECKOUT_SUBMODULES }}
        token: ${{ inputs.CHECKOUT_TOKEN }}

    - uses: docker/setup-buildx-action@v3
      id: setup-buildx
    
    - name: Cache Go (build + modules)
      uses: actions/cache@v4
      id: cache-go
      with:
        path: |
          go-build-cache
          go-mod-cache
        key: ${{ inputs.GO_CACHE_KEY }}

    - name: Inject caches into Docker
      uses: reproducible-containers/buildkit-cache-dance@v3.3.0
      with:
        builder: ${{ steps.setup-buildx.outputs.name }}
        cache-map: |
          {
            "go-build-cache": "/root/.cache/go-build",
            "go-mod-cache": "/go/pkg/mod"
          }
        skip-extraction: ${{ steps.cache-go.outputs.cache-hit }}

    - name: Docker login
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.DOCKER_LOGIN_URL }}
        username: ${{ inputs.DOCKER_LOGIN }}
        password: ${{ inputs.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.DOCKER_CONTEXT }}
        file: ${{ inputs.DOCKER_FILE }}
        tags: ${{ inputs.DOCKER_IMAGE }}
        cache-from: ${{ inputs.CACHE_FROM }}
        cache-to: ${{ inputs.CACHE_TO }}
        build-args: ${{ input.BUILD_ARGS }}
        push: true
        provenance: false
